networks:
  mp-micro-services:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/16

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      mp-micro-services:
        ipv4_address: 172.30.0.2

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      mp-micro-services:
        ipv4_address: 172.30.0.3

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      mp-micro-services:
        ipv4_address: 172.30.0.4
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-micro
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      mp-micro-services:
        ipv4_address: 172.30.0.5

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-micro
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "@fiap2024"
      ACCEPT_EULA: "Y"
    networks:
      mp-micro-services:
        ipv4_address: 172.30.0.6

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      mp-micro-services:
        ipv4_address: 172.30.0.7

  logger:
    build:
      context: ./MPLogger
      dockerfile: Dockerfile
    ports:
      - "5020:5020"
    environment:
      - DOTNET_ENVIRONMENT=Docker
    depends_on:
      - rabbitmq
      - mongo
    networks:
      mp-micro-services:
        ipv4_address: 172.30.0.8

  kong-database:
    build:
      context: ./Kong-Konga-DockerCompose/
      dockerfile: Dockerfile
    restart: always
    env_file:
      - Kong-Konga-DockerCompose/.env
    environment:
      - POSTGRES_USER=${KONG_DB_USERNAME}
      - POSTGRES_PASSWORD=${KONG_DB_PASSWORD}
      - POSTGRES_DB=${KONG_DB_NAME}
    networks:
      mp-micro-services:
        ipv4_address: 172.30.0.30
      
  kong-migrations:
    image: kong:3.4
    env_file:
      - Kong-Konga-DockerCompose/.env
    entrypoint: "kong migrations bootstrap"
    environment:
      - KONG_DATABASE=${KONG_DATABASE}
      - KONG_PG_HOST=${KONG_DB_HOST}
      - KONG_PG_DATABASE=${KONG_DB_NAME}
      - KONG_PG_USER=${KONG_DB_USERNAME}
      - KONG_PG_PASSWORD=${KONG_DB_PASSWORD}
    restart: on-failure
    links:
      - kong-database
    networks:
      mp-micro-services:
        ipv4_address: 172.30.0.31
    depends_on:
      - kong-database
    
  kong:
    image: kong:3.4
    env_file:
      - Kong-Konga-DockerCompose/.env
    environment:
      - KONG_DATABASE=${KONG_DATABASE}
      - KONG_PG_HOST=${KONG_DB_HOST}
      - KONG_PG_DATABASE=${KONG_DB_NAME}
      - KONG_PG_USER=${KONG_DB_USERNAME}
      - KONG_PG_PASSWORD=${KONG_DB_PASSWORD}
      - KONG_LOG_LEVEL=${KONG_LOG_LEVEL}
      - KONG_PROXY_ACCESS_LOG=${KONG_PROXY_ACCESS_LOG}
      - KONG_ADMIN_ACCESS_LOG=${KONG_ADMIN_ACCESS_LOG}
      - KONG_PROXY_ERROR_LOG=${KONG_PROXY_ERROR_LOG}
      - KONG_ADMIN_ERROR_LOG=${KONG_ADMIN_ERROR_LOG}
      - KONG_ADMIN_LISTEN=${KONG_ADMIN_LISTEN}
      - KONG_ADMIN_GUI_URL=${KONG_ADMIN_GUI_URL}
    restart: always
    links:
      - kong-database
    ports:
      - ${KONG_PROXY_PORT}:${KONG_PROXY_PORT}
      - ${KONG_PROXY_SSL_PORT}:${KONG_PROXY_SSL_PORT}
      - ${KONG_PROXY_ADMIN_API_PORT}:${KONG_PROXY_ADMIN_API_PORT}
      - ${KONG_PROXY_ADMIN_SSL_API_PORT}:${KONG_PROXY_ADMIN_SSL_API_PORT}
      - ${KONG_MANAGER_PORT}:${KONG_MANAGER_PORT}
      - ${KONG_MANAGER_SSL_PORT}:${KONG_MANAGER_SSL_PORT}
      - ${KONG_3_PORT}:${KONG_3_PORT}
      - ${KONG_4_PORT}:${KONG_4_PORT}
    networks:
      mp-micro-services:
        ipv4_address: 172.30.0.32
    depends_on:
      - kong-database
      - kong-migrations

  konga-prepare:
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga"
    restart: on-failure
    env_file:
      - Kong-Konga-DockerCompose/.env
    links:
      - kong-database
    networks:
      mp-micro-services:
        ipv4_address: 172.30.0.33
    depends_on:
      - kong-database
      - kong-migrations
      - kong

  konga:
    image: pantsel/konga:latest
    env_file:
      - Kong-Konga-DockerCompose/.env
    environment:
      - TOKEN_SECRET=${KONGA_TOKEN_SECRET}
      - DB_ADAPTER=${KONG_DATABASE}
      - DB_HOST=${KONG_DB_HOST}
      - DB_PORT=${KONG_DB_PORT}
      - DB_DATABASE=${KONGA_DB_NAME}
      - DB_USER=${KONG_DB_USERNAME}
      - DB_PASSWORD=${KONG_DB_PASSWORD}
      - NODE_ENV=${KONGA_ENV}
    restart: always
    links:
      - kong-database
    ports:
      - ${KONGA_PORT}:${KONGA_PORT}
    networks:
      mp-micro-services:
        ipv4_address: 172.30.0.34
    depends_on:
      - kong-database
      - kong-migrations
      - kong
      - konga-prepare

volumes:
  mongo-data:
    driver: local

